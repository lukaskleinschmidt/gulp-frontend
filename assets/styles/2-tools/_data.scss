/// Creates responsive data attributes
/// @param  {String}     $attribute - optional
/// @param  {Map | List} $options
/// @param  {Map}        $breakpoints - optional
/// @example
///
/// @include data((
///   'left',
///   'right',
///   'center',
/// ), (
///   'medium': 48em,
/// )) {
///   text-align: value();
/// }
///
/// Output:
///
/// [data-base~="left"] {
///   text-align: left;
/// }
///
/// [data-base~="right"] {
///   text-align: right;
/// }
///
/// [data-base~="center"] {
///   text-align: center;
/// }
///
/// @media (min-width: 48em) {
///   [data-medium~="left"] {
///     text-align: left;
///   }
///
///   [data-medium~="right"] {
///     text-align: right;
///   }
///
///   [data-medium~="center"] {
///     text-align: center;
///   }
/// }
@mixin data($args...) {
  @if not(type-of(nth($args, 1)) == 'string') {
    $args: join(null, $args);
  }

  @if length($args) < 3 {
    $args: append($args, get('breakpoint'));
  }

  $breakpoints: nth($args, 3);
  $attribute: nth($args, 1);
  $options: nth($args, 2);
  $index: 0;
  $type: type-of($options);

  @if type-of($attribute) == 'string' {
    $attribute: -#{$attribute};
  }

  // data attribute without any breakpoint
  @each $option-key, $option-value in $options {

    // cache key and value
    @include set('_data', (
      'key': if($type == 'list', $index, $option-key),
      'value': if($type == 'list', $option-key, $option-value),
    ));

    // increase index
    $index: $index + 1;

    [data#{if($attribute, $attribute, '-base')}~="#{$option-key}"] {
      @content;
    }
  }

  // data attribute for all breakpoints
  @each $breakpoint-key, $breakpoint-value in $breakpoints {

    // reset index
    $index: 0;

    @include breakpoint($breakpoint-value) {
      @each $option-key, $option-value in $options {

        // cache key and value
        @include set('_data', (
          'key': if($type == 'list', $index, $option-key),
          'value': if($type == 'list', $option-key, $option-value),
        ));

        // increase index
        $index: $index + 1;

        [data#{$attribute}-#{$breakpoint-key}~="#{$option-key}"] {
          @content;
        }
      }
    }
  }
}

/// Get current key.
/// @return {String|Int}
@function key() {
  @return get('_data', 'key');
}

/// Get current value.
/// @return {Mixed}
@function value() {
  @return get('_data', 'value');
}
