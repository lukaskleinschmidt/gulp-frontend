/// Strip whitespace (or an other character) from the beginning and end of a string.
///
/// @param {String} $string - The string that will be trimmed.
/// @param {String} $character - Character that you want to be stripped.
/// @return {String} The trimmed string.

@function __trim($string, $character: ' ') {

  // remove $character from the beginning of the $string
  @while str-index($string, $character) == 1 {
    $string: str-slice($string, 2);
  }

  // current $string length
  $length: str-length($string);

  // remove $character from the end of the $string
  @while str-slice($string, $length) == $character {
    $length: $length - 1;
    $string: str-slice($string, 0, $length);
  }

  @return $string;
}


/// Generate custom properties that are also available in SCSS.
///
/// @param {Map} $values - Map of custom properties.
/// @param {String} $group - Name of the group.
/// @example
///
/// :root {
///   @include variables((
///     --sizing: border-box,
///   ));
///
///   @include variables((
///     --primary: steelblue,
///   ), color);
///
///   @include variables((
///     --container-small: 710px,
///     --container-medium: 890px,
///   ), container);
/// }
///
/// $registry-data: (
///   --sizing: border-box,
///   --primary: steelblue,
///   --container-small: 710px,
///   --container-medium: 890px,
///   color: (
///     primary: steelblue
///   ),
///   container: (
///     small: 710px,
///     medium: 890px
///   ),
/// );
///
/// :root {
///   --sizing: border-box;
///   --primary: steelblue;
///   --container-small: 710px
///   --container-medium: 890px;
/// }

@mixin variables($values, $group: null) {

  // check if a selector is present
  // and output the custom properties
  @if & {
    @each $key, $value in $values {
      #{$key}: #{$value};
    }
  }

  @each $key, $value in $values {

    // register the custom property itself
    @include store($key, $value);

    $key: __trim($key, '-');

    // when a group is supplied the mixin will try
    // to group the variables with the given group
    @if $group {
      $index: str-index($key, $group);

      @if $index {
        $key: str-slice($key, str-length($group) + 1);
      }

      $key: __trim($key, '-');

      // make the first character of $key lowercase
      $key: to-lower-case(str-slice($key, 1, 1)) + str-slice($key, 2);

      @include store($group, ($key: $value));
    }

    // otherwise just set the $value
    // with the sliced $key
    @else {
      @include store($key, $value);
    }
  }
}
