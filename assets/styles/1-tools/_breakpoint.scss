/// Parse the value.
///
/// @param {String | Number} $value - Either a number or valid breakpoint.
/// @return {Number} The parsed input.

@function __parse-breakpoint($value) {
  @if type-of($value) == 'string' {
    $value: config('breakpoints', $value);
  }

  @return em($value);
}


/// Media query helper.
///
/// @param {String | Number} $min-width - Starting breakpoint.
/// @param {String | Number} $max-width - Ending breakpoint.
/// @param {String} $media-type ['all'] - Chosen media type.
/// @see {mixin} __respond-to

@mixin __respond-to($min-width, $max-width, $media-type: 'all') {
  $min-width: __parse-breakpoint($min-width);
  $max-width: __parse-breakpoint($max-width);
  $media-query: '';

  // output rules inside @media queries
  @if strip-unit($min-width) != 0 {
    $media-query: '#{$media-query} and (min-width: #{$min-width})';
  }

  @if strip-unit($max-width) != 0 {
    // ideally we would use media queries level 4 (width < #{$max-width}) here
    // https://www.w3.org/TR/mediaqueries-4/
    $media-query: '#{$media-query} and (max-width: #{($max-width - 0.01em)})';
  }

  // remove unnecessary media query prefix ' and '
  @if ($media-type == 'all' and $media-query != '') {
    $media-query: str-slice(unquote($media-query), 6);
    $media-type: '';
  }

  // output @media query
  @media #{$media-type + $media-query} {
    @content;
  }
}


/// Media query from this breakpoint.
///
/// @param {String | Number} $min-width - Starting breakpoint.
/// @param {String} $media-type ['all'] - Chosen media type.

@mixin breakpoint($min-width, $media-type: 'all') {
  @include __respond-to($min-width, 0px, $media-type) {
    @content;
  }
}


/// Media query until this breakpoint.
///
/// @param {String | Number} $max-width - Ending breakpoint.
/// @param {String} $media-type ['all'] - Chosen media type.

@mixin breakpoint-until($max-width, $media-type: 'all') {
  @include __respond-to(0px, $max-width, $media-type) {
    @content;
  }
}


/// Media query between two breakpoints.
///
/// @param {String | Number} $min-width - Starting breakpoint.
/// @param {String | Number} $max-width - Ending breakpoint.
/// @param {String} $media-type ['all'] - Chosen media type.

@mixin breakpoint-between($min-width, $max-width, $media-type: 'all') {
  @include __respond-to($min-width, $max-width, $media-type) {
    @content;
  }
}
