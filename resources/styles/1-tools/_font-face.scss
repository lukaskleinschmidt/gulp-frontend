@use 'sass:list';
@use 'sass:map';


/// Create @font-face declarations.
///
/// @param {String} $file - Path without file extension.
/// @param {List} $formats - File formats.
/// @param {List} $src [()] - Prepend custom src.
///
/// @example scss
///   @include font-face('../path/to/file', eot otf woff) {
///     font-family: Font;
///     font-weight: 300;
///     font-style: normal;
///   }
///
///   // @font-face {
///   //   src: url("../path/to/file.eot");
///   //   src: url("../path/to/file.eot?#iefix") format("embedded-opentype"),
///   //        url("../path/to/file.otf") format("opentype"),
///   //        url("../path/to/file.woff") format("woff");
///   //   font-family: Font;
///   //   font-weight: 300;
///   //   font-style: normal;
///   // }
@mixin font-face($file, $formats, $src: ()) {
  @font-face {
    @if list.index($formats, eot) {
      src: url('#{$file}.eot');
    }

    @each $format in $formats {
      $src: list.append($src, url('#{$file}.#{map.get((
        eot: 'eot?#iefix',
        ttf: 'ttf',
        otf: 'otf',
        woff2: 'woff2',
        woff: 'woff',
        svg: 'svg#svgFontName',
      ), $format)}') format('#{map.get((
        eot: 'embedded-opentype',
        ttf: 'truetype',
        otf: 'opentype',
        woff2: 'woff2',
        woff: 'woff',
        svg: 'svg',
      ), $format)}'), comma);
    }

    src: $src;

    @content;
  }
};
